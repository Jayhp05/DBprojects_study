-- 회원 정보 저장 테이블
CREATE TABLE member_table (
    MEMBER_ID NUMBER NOT NULL,
    MEMBER_NAME VARCHAR2(10) NOT NULL,
    RESIDENT_NUMBER NUMBER(13) NOT NULL,
    TEL NUMBER(11),
    PHONE NUMBER(11) NOT NULL,
    ZIP_CODE NUMBER,
    ADDRESS VARCHAR2(100 CHAR) NOT NULL,
    JOIN_DATE DATE NOT NULL,
    CONSTRAINT member_table_pk PRIMARY KEY (MEMBER_ID)
);

-- 주문 테이블
CREATE TABLE order_table (
    ORDER_NO NUMBER NOT NULL,
    ORDER_DATE DATE NOT NULL,
    ORDER_PRICE NUMBER NOT NULL,
    MEMBER_ID NUMBER NOT NULL,
    CONSTRAINT order_table_pk PRIMARY KEY (ORDER_NO),
    CONSTRAINT order_table_fk_01 FOREIGN KEY (MEMBER_ID) REFERENCES member_table (MEMBER_ID)
);

-- 주문 상세 정보 저장 테이블
CREATE TABLE order_detail (
    ORDER_DETAIL_NO NUMBER NOT NULL,
    ORDER_COUNT NUMBER NOT NULL,
    ORDER_NO NUMBER NOT NULL,
    ISBN13_CODE NUMBER NOT NULL,
    CONSTRAINT order_detail_table_pk PRIMARY KEY (ORDER_DETAIL_NO),
    CONSTRAINT order_detail_table_fk_01 FOREIGN KEY (ORDER_NO) REFERENCES order_table (ORDER_NO),
    CONSTRAINT order_detail_table_fk_02 FOREIGN KEY (ISBN13_CODE) REFERENCES BOOK (ISBN13_CODE)
);

-- 도서 정보 테이블
CREATE TABLE book (
    ISBN13_CODE NUMBER NOT NULL,
    TITLE VARCHAR2(50 CHAR) NOT NULL,
    WRITER VARCHAR2(20 CHAR) NOT NULL,
    PUBLISHER VARCHAR2(20 CHAR) NOT NULL,
    PUB_DAY DATE NOT NULL,
    PRICE NUMBER NOT NULL,
    BOOK_INTRO VARCHAR2(1000),
    CONSTRAINT book_table_pk PRIMARY KEY (ISBN13_CODE)
);

-- 도서 테이블에 장르번호를 추가하기 위하 sql문
ALTER TABLE book ADD GENRE_NO NUMBER NOT NULL;

ALTER TABLE book ADD CONSTRAINT book_table_fk_01 
FOREIGN KEY (GENRE_NO) REFERENCES GENRE (GENRE_NO);

-- 장르 정보 테이블
CREATE TABLE genre (
    GENRE_NO NUMBER NOT NULL,
    GENRE_NAME VARCHAR2(20 CHAR) NOT NULL,
    ISBN13_CODE NUMBER NOT NULL,
    CONSTRAINT genre_table_pk PRIMARY KEY (GENRE_NO),
    CONSTRAINT genre_table_fk_01 FOREIGN KEY (ISBN13_CODE) REFERENCES BOOK (ISBN13_CODE)
);

-- 재고관리를 위한 테이블
CREATE TABLE stock (
    ISBN13_CODE NUMBER NOT NULL,
    STOCK_LOC VARCHAR2(500) NOT NULL,
    STOCK_COUNT NUMBER NOT NULL,
    CONSTRAINT stock_table_pk PRIMARY KEY (ISBN13_CODE),
    CONSTRAINT stock_table_fk_01 FOREIGN KEY (ISBN13_CODE) REFERENCES BOOK (ISBN13_CODE)
);

-- 배송 정보 테이블
CREATE TABLE delivery (
    DELIVERY_NO NUMBER NOT NULL,
    DELIVERY_SITUATION VARCHAR2(500) NOT NULL,
    ISBN13_CODE NUMBER NOT NULL,
    ORDER_NO NUMBER NOT NULL,
    CONSTRAINT delivery_table_pk PRIMARY KEY (DELIVERY_NO),
    CONSTRAINT delivery_table_fk_01 FOREIGN KEY (ORDER_NO) REFERENCES order_table (ORDER_NO),
    CONSTRAINT delivery_table_fk_02 FOREIGN KEY (ISBN13_CODE) REFERENCES BOOK (ISBN13_CODE)
);

-- 매출액에 관한 정보 테이블 **(일별, 월별, 연별에 대한 정보 추후 수정 필요)**
CREATE TABLE sales_board (
    SALES_NO NUMBER(15) NOT NULL,
    ISBN13_CODE NUMBER(15) NOT NULL,
    POPULARITY VARCHAR2(20 CHAR),
    SUM_SALES NUMBER NOT NULL,
    ORDER_NO NUMBER(15) NOT NULL,
    CONSTRAINT sales_board_table_pk PRIMARY KEY (SALES_NO),
    CONSTRAINT sales_board_table_fk_01 FOREIGN KEY (ORDER_NO) REFERENCES order_table (ORDER_NO),
    CONSTRAINT sales_board_table_fk_02 FOREIGN KEY (ISBN13_CODE) REFERENCES BOOK (ISBN13_CODE)
);

-- 포인트 정보 테이블
CREATE TABLE point_table (
    MEMBER_ID NUMBER NOT NULL,
    REWARD_POINT NUMBER NOT NULL,
    CONSTRAINT point_table_pk01 PRIMARY KEY (MEMBER_ID),
    CONSTRAINT point_table_fk FOREIGN KEY (MEMBER_ID) REFERENCES member_table (MEMBER_ID)
);

-- 리뷰에 관한 정보 테이블
CREATE TABLE review (
    REVIEW_NO NUMBER NOT NULL,
    REVIEW_DATE DATE NOT NULL,
    REVIEW_CONTENT VARCHAR2(300 CHAR) NOT NULL,
    MEMBER_ID NUMBER NOT NULL,
    ISBN13_CODE NUMBER NOT NULL,
    CONSTRAINT review_table_pk PRIMARY KEY (REVIEW_NO),
    CONSTRAINT review_table_fk_01 FOREIGN KEY (MEMBER_ID) REFERENCES member_table (MEMBER_ID),
    CONSTRAINT review_table_fk_02 FOREIGN KEY (ISBN13_CODE) REFERENCES BOOK (ISBN13_CODE)
);

INSERT INTO member_table (MEMBER_ID, MEMBER_NAME, RESIDENT_NUMBER, PHONE, ADDRESS, JOIN_DATE)
VALUES (1, '김철수', '9001011234567', '01098765432', '서울시 강남구', '2018-01-15');

INSERT INTO member_table (MEMBER_ID, MEMBER_NAME, RESIDENT_NUMBER, TEL, PHONE, ZIP_CODE, ADDRESS, JOIN_DATE)
VALUES (2, '이영희', '8805052345678', '023456789', '01023456789', '23456', '서울시 마포구 합정동', TO_DATE('2010-02-20', 'YYYY-MM-DD'));

INSERT INTO member_table (MEMBER_ID, MEMBER_NAME, RESIDENT_NUMBER, TEL, PHONE, ZIP_CODE, ADDRESS, JOIN_DATE)
VALUES (3, '홍길동', '9505053456789', '03134567890', '01034567890', '34567', '경기도', '2023-09-10');

INSERT INTO member_table (MEMBER_ID, MEMBER_NAME, RESIDENT_NUMBER, PHONE, ZIP_CODE, ADDRESS, JOIN_DATE)
VALUES (4, '임민희', '9107074567890', '01045678901', '45678', '인천광역시', '2025-02-02');

INSERT INTO member_table (MEMBER_ID, MEMBER_NAME, RESIDENT_NUMBER, TEL, PHONE, ZIP_CODE, ADDRESS, JOIN_DATE)
VALUES (5, '최희수', '9503035678901', '025679012', '01056789012', '56789', '대전시', '2011-05-12');

-- 각 테이블 조회
select * from member_table;
select * from order_table;
select * from order_detail;
select * from book;
select * from genre;
select * from stock;
select * from delivery;
select * from sales_board;
select * from point_table;
select * from review;

